{"version":3,"file":"BarLine.js","sources":["../src/BarLine.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport head from 'ramda/src/head';\nimport identity from 'ramda/src/identity';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\nimport { line as d3Line } from 'd3-shape';\nimport {\n  Axis,\n  Grid,\n  Label,\n  LineDatum,\n  StackedBarDatum,\n  SVG,\n} from './components';\nimport {\n  buildStack,\n  debounce,\n  drawGrid,\n  extendXPath,\n  getId,\n  getLineDataForSeries,\n  getMax,\n  getStackedMax,\n  getSize,\n  getXScale,\n  getYScale,\n  palette,\n  rotateXLabels,\n  setLineType,\n  setupData,\n  toStackedForm,\n  toSingleForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SCALE_BAND,\n  SCALE_LINEAR,\n  SCALE_TIME,\n  SECONDARY_THEME,\n  SIZE,\n  THEME,\n  TICKS,\n} from './utils/constants';\n\nconst BarLine = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  grid,\n  height: svgHeight = undefined,\n  isHorizontal,\n  lineSeries = [],\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  responsive = false,\n  secondaryTheme = SECONDARY_THEME,\n  stackedSeries = [],\n  theme = THEME,\n  ticks = TICKS,\n  width: svgWidth = undefined,\n  xAxisLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  yAxisLabel,\n}) => {\n  const svgRef = useRef();\n  const [id] = useState(getId('bar-line'));\n  const [{ width, height, isSizeSet }, setSize] = useState(SIZE);\n  const [isDates, data] = useMemo(() => setupData(chartData), chartData);\n  const stack = useMemo(\n    () => buildStack(stackedSeries)(toStackedForm(data)),\n    data\n  );\n\n  const xScale = getXScale(\n    isDates ? SCALE_TIME : SCALE_BAND,\n    data,\n    width,\n    true\n  );\n  const yScale = getYScale(\n    SCALE_LINEAR,\n    getMax(getStackedMax(data, stackedSeries)),\n    height\n  );\n\n  const line = d3Line()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) =>\n      isDates ? xScale(name) : xScale(name) + xScale.bandwidth() / 2\n    )\n    .y(({ value }) => yScale(value));\n\n  const lineData = getLineDataForSeries(lineSeries, data);\n\n  const handleSize = () => {\n    const offsetWidth = svgRef.current.parentElement.offsetWidth;\n    if ((svgWidth || svgHeight) && !isSizeSet) {\n      setSize({\n        ...getSize(svgWidth, svgHeight, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    } else if (offsetWidth !== svgWidth - (margin.left + margin.right)) {\n      setSize({\n        ...getSize(offsetWidth, undefined, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    }\n  };\n\n  const handleResize = debounce(handleSize)();\n\n  useEffect(() => {\n    handleSize();\n    responsive && window.addEventListener('resize', handleResize);\n\n    return () => {\n      responsive && window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <SVG\n      identifier={id}\n      size={{\n        width: svgWidth || width + margin.left + margin.right,\n        height: svgHeight || height + margin.top + margin.bottom,\n      }}\n      ref={svgRef}\n    >\n      <g\n        className=\"silky-charts-container\"\n        transform={`translate(${margin.left}, ${margin.top})`}\n      >\n        {grid && (\n          <Grid\n            ref={node =>\n              d3Select(node).call(\n                drawGrid(isHorizontal, xScale, height, yScale, width, ticks)\n              )\n            }\n          />\n        )}\n\n        {xAxisLabel && (\n          <Label axis=\"x\" margin={margin} width={width} height={height}>\n            {xAxisLabel}\n          </Label>\n        )}\n\n        {yAxisLabel && (\n          <Label axis=\"y\" margin={margin} width={width} height={height}>\n            {yAxisLabel}\n          </Label>\n        )}\n\n        <StackedBarDatum\n          data={data}\n          series={stack}\n          isDates={isDates}\n          theme={theme}\n          x={xScale}\n          y={yScale}\n          width={width}\n          height={height}\n          onClick={onClick}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        />\n\n        <Axis\n          axis=\"x\"\n          position={{ x: 0, y: height }}\n          ref={node => {\n            d3Select(node).call(d3AxisBottom(xScale));\n            isDates && extendXPath(id, width);\n            xAxisLabelRotation && rotateXLabels(id, xAxisLabelRotationValue);\n          }}\n        />\n        <Axis\n          axis=\"y\"\n          ref={node => d3Select(node).call(d3AxisLeft(yScale).ticks(ticks))}\n        />\n\n        {lineData.map((datum, idx) => (\n          <g className={`${head(datum)['series']}-layer`} key={idx}>\n            <LineDatum\n              chart=\"bar-line\"\n              data={datum}\n              isDates={isDates}\n              color={palette.themes[secondaryTheme].base[idx]}\n              d={line(datum)}\n              xScale={xScale}\n              yScale={yScale}\n              onClick={onClick}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            />\n          </g>\n        ))}\n      </g>\n    </SVG>\n  );\n};\n\nexport default BarLine;\n"],"names":["BarLine","aspectRatio","ASPECT_RATIO","chartData","data","grid","height","svgHeight","undefined","isHorizontal","lineSeries","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","responsive","secondaryTheme","SECONDARY_THEME","stackedSeries","theme","THEME","ticks","TICKS","width","svgWidth","xAxisLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","yAxisLabel","svgRef","useRef","useState","getId","id","SIZE","isSizeSet","setSize","useMemo","setupData","isDates","stack","buildStack","toStackedForm","xScale","getXScale","SCALE_TIME","SCALE_BAND","yScale","getYScale","SCALE_LINEAR","getMax","getStackedMax","line","d3Line","curve","setLineType","x","name","bandwidth","y","value","lineData","getLineDataForSeries","handleSize","offsetWidth","current","parentElement","getSize","left","right","handleResize","debounce","useEffect","window","addEventListener","removeEventListener","React","SVG","top","bottom","Grid","node","d3Select","call","drawGrid","Label","StackedBarDatum","Axis","d3AxisBottom","extendXPath","rotateXLabels","d3AxisLeft","map","datum","idx","head","LineDatum","palette","themes","base"],"mappings":"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"}