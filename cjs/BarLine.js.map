{"version":3,"file":"BarLine.js","sources":["../src/BarLine.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport {\n  scaleBand as d3ScaleBand,\n  scaleLinear as d3ScaleLinear,\n} from 'd3-scale';\nimport { select as d3Select } from 'd3-selection';\nimport { line as d3Line } from 'd3-shape';\nimport { timeFormat as d3TimeFormat } from 'd3-time-format';\nimport head from 'ramda/src/head';\nimport identity from 'ramda/src/identity';\nimport { GraphContext } from './contexts';\nimport {\n  Axis,\n  Grid,\n  Label,\n  LineDatum,\n  MainGroup,\n  DataSource,\n  StackedBarDatum,\n  SVG,\n  Title,\n} from './components';\nimport useResize from './hooks/useResize';\nimport {\n  buildStack,\n  drawGrid,\n  getId,\n  getLineDataForSeries,\n  getMax,\n  getStackedMax,\n  getSize,\n  palette,\n  rotateXLabels,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SCALE_PADDING,\n  SECONDARY_THEME,\n  SIZE,\n  THEME,\n  X_TICKS,\n  Y_TICKS,\n  TIME_FORMAT,\n} from './utils/constants';\n\nconst BarLine = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  dataSource,\n  dateFormat = TIME_FORMAT,\n  grid,\n  height: svgHeight = undefined,\n  horizontal,\n  lineSeries = [],\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  padding: xScalePadding = SCALE_PADDING,\n  responsive,\n  secondaryTheme = SECONDARY_THEME,\n  stackedSeries = [],\n  staticTooltip,\n  theme = THEME,\n  title,\n  tooltip,\n  width: svgWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  xAxisTicks = X_TICKS,\n  yAxisChartLabel,\n  yAxisTicks = Y_TICKS,\n}) => {\n  const svgRef = useRef();\n  const [id] = useState(getId('bar-line'));\n  const timeFormat = d3TimeFormat(dateFormat);\n  const [{ width, height, isSizeSet }, setSize] = useState(SIZE);\n  const [isDates, data] = setupData(chartData);\n  const stack = buildStack(stackedSeries)(toStackedForm(data));\n\n  const xScale = d3ScaleBand()\n    .domain(data.map(({ name }) => name))\n    .range([0, width])\n    .padding(xScalePadding);\n\n  const yScale = d3ScaleLinear()\n    .domain([0, getMax(getStackedMax(data, stackedSeries))])\n    .range([height, 0]);\n\n  const line = d3Line()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name) + xScale.bandwidth() / 2)\n    .y(({ value }) => yScale(value));\n\n  const lineData = getLineDataForSeries(lineSeries, data);\n\n  const handleSize = () => {\n    const offsetWidth = svgRef.current.parentElement.offsetWidth;\n    if ((svgWidth || svgHeight) && !isSizeSet) {\n      setSize({\n        ...getSize(svgWidth, svgHeight, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    } else if (offsetWidth !== svgWidth - (margin.left + margin.right)) {\n      setSize({\n        ...getSize(offsetWidth, undefined, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    }\n  };\n\n  useResize(responsive, handleSize);\n\n  return (\n    <GraphContext.Provider\n      value={{ margin, node: svgRef.current, staticTooltip }}\n    >\n      <SVG\n        identifier={id}\n        size={{\n          width: svgWidth || width + margin.left + margin.right,\n          height: svgHeight || height + margin.top + margin.bottom,\n        }}\n        ref={svgRef}\n      >\n        <MainGroup margin={margin}>\n          {grid && (\n            <Grid\n              ref={node =>\n                d3Select(node).call(\n                  drawGrid(\n                    horizontal,\n                    xScale,\n                    height,\n                    yScale,\n                    width,\n                    xAxisTicks,\n                    yAxisTicks\n                  )\n                )\n              }\n            />\n          )}\n\n          {title && (\n            <Title margin={margin} width={width}>\n              {title}\n            </Title>\n          )}\n\n          {xAxisChartLabel && (\n            <Label axis=\"x\" margin={margin} width={width} height={height}>\n              {xAxisChartLabel}\n            </Label>\n          )}\n\n          {yAxisChartLabel && (\n            <Label axis=\"y\" margin={margin} width={width} height={height}>\n              {yAxisChartLabel}\n            </Label>\n          )}\n\n          {dataSource && (\n            <DataSource\n              dataSource={dataSource}\n              height={height}\n              margin={margin}\n              width={width}\n            />\n          )}\n\n          <StackedBarDatum\n            data={data}\n            series={stack}\n            theme={theme}\n            x={xScale}\n            y={yScale}\n            width={width}\n            height={height}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            tooltip={tooltip}\n          />\n\n          <Axis\n            axis=\"x\"\n            position={{ x: 0, y: height }}\n            ref={node => {\n              d3Select(node).call(\n                d3AxisBottom(xScale)\n                  .ticks(xAxisTicks)\n                  .tickFormat(isDates ? timeFormat : null)\n              );\n              xAxisLabelRotation && rotateXLabels(id, xAxisLabelRotationValue);\n            }}\n          />\n\n          <Axis\n            axis=\"y\"\n            ref={node =>\n              d3Select(node).call(d3AxisLeft(yScale).ticks(yAxisTicks))\n            }\n          />\n\n          {lineData.map((datum, idx) => (\n            <g className={`${head(datum)['series']}-layer`} key={idx}>\n              <LineDatum\n                chart=\"bar-line\"\n                data={datum}\n                color={palette.themes[secondaryTheme][idx]}\n                d={line(datum)}\n                xScale={xScale}\n                yScale={yScale}\n                margin={margin}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                staticTooltip={staticTooltip}\n                svg={svgRef.current}\n                tooltip={tooltip}\n              />\n            </g>\n          ))}\n        </MainGroup>\n      </SVG>\n    </GraphContext.Provider>\n  );\n};\n\nexport default BarLine;\n"],"names":["BarLine","aspectRatio","ASPECT_RATIO","chartData","data","dataSource","dateFormat","TIME_FORMAT","grid","height","svgHeight","undefined","horizontal","lineSeries","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","padding","xScalePadding","SCALE_PADDING","responsive","secondaryTheme","SECONDARY_THEME","stackedSeries","staticTooltip","theme","THEME","title","tooltip","width","svgWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","xAxisTicks","X_TICKS","yAxisChartLabel","yAxisTicks","Y_TICKS","svgRef","useRef","useState","getId","id","timeFormat","d3TimeFormat","SIZE","isSizeSet","setSize","setupData","isDates","stack","buildStack","toStackedForm","xScale","d3ScaleBand","domain","map","name","range","yScale","d3ScaleLinear","getMax","getStackedMax","line","d3Line","curve","setLineType","x","bandwidth","y","value","lineData","getLineDataForSeries","handleSize","offsetWidth","current","parentElement","getSize","left","right","useResize","React","GraphContext","node","SVG","top","bottom","MainGroup","Grid","d3Select","call","drawGrid","Title","Label","DataSource","StackedBarDatum","Axis","d3AxisBottom","ticks","tickFormat","rotateXLabels","d3AxisLeft","datum","idx","head","LineDatum","palette","themes"],"mappings":"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"}