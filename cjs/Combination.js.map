{"version":3,"file":"Combination.js","sources":["../src/Combination.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  scaleBand as d3ScaleBand,\n  scaleLinear as d3ScaleLinear,\n} from 'd3-scale';\nimport { select as d3Select } from 'd3-selection';\nimport { line as d3Line } from 'd3-shape';\nimport head from 'ramda/src/head';\nimport identity from 'ramda/src/identity';\nimport { GraphContext } from './contexts';\nimport {\n  Axis,\n  Grid,\n  Label,\n  LineDatum,\n  MainGroup,\n  DataSource,\n  StackedBarDatum,\n  SVG,\n  Title,\n} from './components';\nimport useResize from './hooks/useResize';\nimport {\n  buildStack,\n  drawGrid,\n  getLineDataForSeries,\n  getMax,\n  getStackedMax,\n  palette,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SCALE_PADDING,\n  SECONDARY_THEME,\n  SIZE,\n  THEME,\n  X_TICKS,\n  Y_TICKS,\n  TIME_FORMAT,\n} from './utils/constants';\n\nconst Combination = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  dataSource,\n  dateFormat = TIME_FORMAT,\n  grid,\n  height: graphHeight = undefined,\n  horizontal,\n  lineSeries = [],\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  outlinedStyle,\n  padding: xScalePadding = SCALE_PADDING,\n  responsive,\n  secondaryTheme = SECONDARY_THEME,\n  stackedSeries = [],\n  staticTooltip,\n  theme = THEME,\n  title,\n  tooltip,\n  visibleTicks,\n  width: graphWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  xAxisTicks = X_TICKS,\n  yAxisChartLabel,\n  yAxisTicks = Y_TICKS,\n}) => {\n  const svgRef = useRef();\n  const [{ width, height }, setSize] = useState(SIZE);\n  const [isDates, data] = setupData(chartData);\n  const stack = buildStack(stackedSeries)(toStackedForm(data));\n\n  const xScale = d3ScaleBand()\n    .domain(data.map(({ name }) => name))\n    .range([0, width])\n    .padding(xScalePadding);\n\n  const yScale = d3ScaleLinear()\n    .domain([0, getMax(getStackedMax(data, stackedSeries))])\n    .range([height, 0]);\n\n  const line = d3Line()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name) + xScale.bandwidth() / 2)\n    .y(({ value }) => yScale(value));\n\n  const lineData = getLineDataForSeries(lineSeries, data);\n\n  useResize({\n    aspectRatio,\n    graphHeight,\n    graphWidth,\n    margin,\n    responsive,\n    setSize,\n    svgRef,\n  });\n\n  return (\n    <GraphContext.Provider\n      value={{\n        dateFormat,\n        margin,\n        node: svgRef.current,\n        outlinedStyle,\n        staticTooltip,\n        visibleTicks,\n        xAxisLabelRotation,\n        xAxisLabelRotationValue,\n      }}\n    >\n      <SVG\n        size={{\n          width: graphWidth || width + margin.left + margin.right,\n          height: graphHeight || height + margin.top + margin.bottom,\n        }}\n        ref={svgRef}\n      >\n        <MainGroup margin={margin}>\n          {grid && (\n            <Grid\n              ref={node =>\n                d3Select(node).call(\n                  drawGrid(\n                    horizontal,\n                    xScale,\n                    height,\n                    yScale,\n                    width,\n                    xAxisTicks,\n                    yAxisTicks\n                  )\n                )\n              }\n            />\n          )}\n\n          {title && (\n            <Title margin={margin} width={width}>\n              {title}\n            </Title>\n          )}\n\n          {xAxisChartLabel && (\n            <Label axis=\"x\" margin={margin} width={width} height={height}>\n              {xAxisChartLabel}\n            </Label>\n          )}\n\n          {yAxisChartLabel && (\n            <Label axis=\"y\" margin={margin} width={width} height={height}>\n              {yAxisChartLabel}\n            </Label>\n          )}\n\n          {dataSource && (\n            <DataSource\n              dataSource={dataSource}\n              height={height}\n              margin={margin}\n              width={width}\n            />\n          )}\n\n          <StackedBarDatum\n            data={data}\n            series={stack}\n            theme={theme}\n            x={xScale}\n            y={yScale}\n            width={width}\n            height={height}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            tooltip={tooltip}\n          />\n\n          <Axis\n            axis=\"x\"\n            axisTicks={xAxisTicks}\n            orientation=\"bottom\"\n            position={{ x: 0, y: height }}\n            scale={xScale}\n            toDate={isDates}\n          />\n\n          <Axis\n            axis=\"y\"\n            axisTicks={yAxisTicks}\n            orientation=\"left\"\n            scale={yScale}\n          />\n\n          {lineData.map((datum, idx) => (\n            <g className={`${head(datum)['series']}-layer`} key={idx}>\n              <LineDatum\n                chart=\"combination\"\n                data={datum}\n                color={palette.themes[secondaryTheme][idx]}\n                d={line(datum)}\n                xScale={xScale}\n                yScale={yScale}\n                margin={margin}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                staticTooltip={staticTooltip}\n                svg={svgRef.current}\n                tooltip={tooltip}\n              />\n            </g>\n          ))}\n        </MainGroup>\n      </SVG>\n    </GraphContext.Provider>\n  );\n};\n\nexport default Combination;\n"],"names":["Combination","aspectRatio","ASPECT_RATIO","chartData","data","dataSource","dateFormat","TIME_FORMAT","grid","height","graphHeight","undefined","horizontal","lineSeries","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","outlinedStyle","padding","xScalePadding","SCALE_PADDING","responsive","secondaryTheme","SECONDARY_THEME","stackedSeries","staticTooltip","theme","THEME","title","tooltip","visibleTicks","width","graphWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","xAxisTicks","X_TICKS","yAxisChartLabel","yAxisTicks","Y_TICKS","svgRef","useRef","useState","SIZE","setSize","setupData","isDates","stack","buildStack","toStackedForm","xScale","d3ScaleBand","domain","map","name","range","yScale","d3ScaleLinear","getMax","getStackedMax","line","d3Line","curve","setLineType","x","bandwidth","y","value","lineData","getLineDataForSeries","useResize","React","GraphContext","node","current","SVG","left","right","top","bottom","MainGroup","Grid","d3Select","call","drawGrid","Title","Label","DataSource","StackedBarDatum","Axis","datum","idx","head","LineDatum","palette","themes"],"mappings":"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"}