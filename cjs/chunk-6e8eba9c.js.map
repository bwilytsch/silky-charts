{"version":3,"file":"chunk-6e8eba9c.js","sources":["../src/components/Axis.js","../src/components/BarDatum.js","../src/utils/palette.js","../src/utils/constants.js","../src/components/Circle.js","../src/components/DataGroup.js","../src/utils/isISODate.js","../src/utils/allDate.js","../src/utils/appendStackedValues.js","../src/utils/buildStack.js","../src/utils/bySeries.js","../src/utils/classify.js","../src/utils/ramdaDebounce.js","../src/utils/debounce.js","../src/utils/drawGrid.js","../src/utils/extendXPath.js","../src/utils/getBaseColor.js","../src/utils/getHoverColor.js","../src/utils/getId.js","../src/utils/getLength.js","../src/utils/getLineDataForSeries.js","../src/utils/getMax.js","../src/utils/getStackedMax.js","../src/utils/getSeries.js","../src/utils/getSize.js","../src/utils/getXScale.js","../src/utils/getYScale.js","../src/utils/rotateXLabels.js","../src/utils/setLineType.js","../src/utils/setupData.js","../src/utils/toSingleForm.js","../src/utils/toStackedForm.js","../src/utils/valueFor.js","../src/components/Grid.js","../src/components/Label.js","../src/components/LineDatum.js","../src/components/MainGroup.js","../src/components/Path.js","../src/components/Rect.js","../src/components/StackedBarDatum.js","../src/components/SVG.js","../src/components/Tooltip.js","../src/components/TooltipItem.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Axis = styled.g.attrs(({ axis, position }) => ({\n  className: `axis-${axis}`,\n  transform: position && `translate(${position.x}, ${position.y})`,\n}))``;\n\nexport default Axis;\n","import React, { Fragment, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Rect, Tooltip, TooltipItem } from './';\n\nconst BarDatum = ({\n  color,\n  datum,\n  x,\n  y,\n  width,\n  height,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n  tooltip: withTooltip,\n}) => {\n  const [tooltip, setTooltip] = useState({\n    pageX: null,\n    pageY: null,\n    show: false,\n  });\n\n  return (\n    <Fragment>\n      <Rect\n        chart=\"bar\"\n        position={{ x, y }}\n        size={{ width, height }}\n        fillColor={color}\n        onClick={onClick}\n        onMouseEnter={event => {\n          setTooltip(state => ({ ...state, show: true }));\n          onMouseEnter(event);\n        }}\n        onMouseLeave={event => {\n          setTooltip(state => ({ ...state, show: false }));\n          onMouseLeave(event);\n        }}\n        onMouseMove={event => {\n          event.persist();\n          const { pageX, pageY } = event;\n          setTooltip(state => ({ ...state, pageX, pageY }));\n        }}\n      />\n      {withTooltip &&\n        tooltip.show &&\n        createPortal(\n          <Tooltip pageX={tooltip.pageX} pageY={tooltip.pageY}>\n            <TooltipItem color={color} {...datum} />\n          </Tooltip>,\n          document.body\n        )}\n    </Fragment>\n  );\n};\n\nexport default BarDatum;\n","export const white = 'rgb(255, 255, 255)'; // #FFFFFF\nexport const black = 'rgb(33, 33, 33)'; // #212121\nexport const grey = 'rgb(220, 220, 220)'; // #DCDCDC\n\nexport const themes = {\n  red: {\n    base: [\n      'rgb(127, 29, 24)',\n      'rgb(255, 131, 124)',\n      'rgb(255, 59, 48)',\n      'rgb(127, 66, 62)',\n      'rgb(204, 47, 38)',\n    ],\n    ref: 'rgb(48, 255, 128)',\n  },\n  orange: {\n    base: [\n      'rgb(127, 74, 0)',\n      'rgb(255, 181, 76)',\n      'rgb(255, 149, 0)',\n      'rgb(127, 90, 38)',\n      'rgb(204, 119, 0)',\n    ],\n    ref: 'rgb(0, 156, 255)',\n  },\n  yellow: {\n    base: [\n      'rgb(127, 102, 0)',\n      'rgb(255, 219, 76)',\n      'rgb(255, 204, 0)',\n      'rgb(127, 110, 38)',\n      'rgb()',\n    ],\n    ref: 'rgb(0, 12, 255)',\n  },\n  green: {\n    base: [\n      'rgb(31, 89, 41)',\n      'rgb(145, 223, 159)',\n      'rgb(76, 217, 100)',\n      'rgb(58, 89, 64)',\n      'rgb(58, 166, 76)',\n    ],\n    ref: 'rgb(217, 76, 104)',\n  },\n  tealBlue: {\n    base: [\n      'rgb(44, 98, 122)',\n      'rgb(166, 224, 251)',\n      'rgb(90, 200, 250)',\n      'rgb(81, 109, 122)',\n      'rgb(72, 159, 199)',\n    ],\n    ref: 'rgb(250, 177, 90)',\n  },\n  blue: {\n    base: [\n      'rgb(0, 61, 127)',\n      'rgb(76, 162, 255)',\n      'rgb(0, 122, 255)',\n      'rgb(38, 81, 127)',\n      'rgb(0, 98, 204)',\n    ],\n    ref: 'rgb(255, 162, 0)',\n  },\n  purple: {\n    base: [\n      'rgb(36, 35, 86)',\n      'rgb(156, 155, 221)',\n      'rgb(88, 86, 214)',\n      'rgb(61, 61, 86)',\n      'rgb(67, 66, 163)',\n    ],\n    ref: 'rgb(214, 198, 86)',\n  },\n  pink: {\n    base: [\n      'rgb(127, 22, 42)',\n      'rgb(255, 121, 147)',\n      'rgb(255, 45, 85)',\n      'rgb(127, 61, 73)',\n      'rgb(204, 36, 68)',\n    ],\n    ref: 'rgb(45, 255, 82)',\n  },\n};\n\nexport default {\n  white,\n  black,\n  grey,\n  themes,\n};\n","import {\n  curveBasis,\n  curveBasisClosed,\n  curveBasisOpen,\n  curveBundle,\n  curveCardinal,\n  curveCardinalClosed,\n  curveCardinalOpen,\n  curveCatmullRom,\n  curveCatmullRomClosed,\n  curveCatmullRomOpen,\n  curveLinear,\n  curveLinearClosed,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n} from 'd3-shape';\n\n// Base values\nexport const ASPECT_RATIO = '16:9';\nexport const DEBOUNCE = 100;\nexport const MARGIN = { top: 40, right: 50, bottom: 50, left: 50 };\nexport const ROTATION = -50;\nexport const SIZE = {\n  width: 0,\n  height: 0,\n  isSizeSet: false,\n};\nexport const TICKS = 5;\nexport const TIME_FORMAT = '%a %d';\nexport const TOOLTIP_DATE_FORMAT = 'MMM d, y';\nexport const WIDTH = 640;\n\n// Scales\nexport const SCALE_BAND = 'band';\nexport const SCALE_LINEAR = 'linear';\nexport const SCALE_PADDING = 0.1;\nexport const SCALE_TIME = 'time';\n\n// Themes\nexport const THEME = 'tealBlue';\nexport const SECONDARY_THEME = 'pink';\n\n// Line options\nexport const LINE_STROKE_WIDTH = 3;\nexport const LINE_TYPE = 'curveLinear';\nexport const LINE_TYPES = {\n  curveBasis,\n  curveBasisClosed,\n  curveBasisOpen,\n  curveBundle,\n  curveCardinal,\n  curveCardinalClosed,\n  curveCardinalOpen,\n  curveCatmullRom,\n  curveCatmullRomClosed,\n  curveCatmullRomOpen,\n  curveLinear,\n  curveLinearClosed,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n};\n","import styled from 'styled-components';\nimport { white } from '../utils/palette';\nimport { LINE_STROKE_WIDTH } from '../utils/constants';\n\nconst Circle = styled.circle.attrs(({ chart }) => ({ className: chart }))`\n  fill: ${white};\n  stroke: ${({ strokeColor }) => strokeColor};\n  stroke-width: ${LINE_STROKE_WIDTH};\n`;\n\nexport default Circle;\n","import styled from 'styled-components';\n\nconst DataGroup = styled.g.attrs({\n  className: 'dataviz-layer',\n})``;\n\nexport default DataGroup;\n","import compose from 'ramda/src/compose';\nimport { isValid, parseISO } from 'date-fns';\n\nexport default compose(\n  isValid,\n  parseISO\n);\n","import all from 'ramda/src/all';\nimport compose from 'ramda/src/compose';\nimport { isValid, parseISO } from 'date-fns';\nimport isISODate from './isISODate';\n\nexport default all(isISODate);\n","let idx = 0;\n\nexport default (stack, data) => {\n  stack.forEach(values => {\n    data.forEach(datum => {\n      if (values.key === datum.series) {\n        datum.stackedValues = values[idx];\n        idx += 1;\n      }\n    });\n\n    idx = 0;\n  });\n\n  return data;\n};\n","import { stack as d3Stack, stackOffsetNone, stackOrderNone } from 'd3-shape';\n\nexport default keys =>\n  d3Stack()\n    .keys(keys)\n    .order(stackOrderNone)\n    .offset(stackOffsetNone);\n","import compose from 'ramda/src/compose';\nimport groupBy from 'ramda/src/groupBy';\nimport prop from 'ramda/src/prop';\nimport toPairs from 'ramda/src/toPairs';\n\nexport default compose(\n  toPairs,\n  groupBy(prop('series'))\n);\n","export default str => str.replace(/ /g, '-').toLowerCase();\n","import apply from 'ramda/src/apply';\nimport curry from 'ramda/src/curry';\n\n/**\n * Debounce function\n * Source: https://gist.github.com/tommmyy/daf61103d6022cd23d74c71b0e8adc0d\n *\n * @param {Boolean} immediate If true run `fn` at the start of the timeout\n * @param {Number} timeMs Debounce timeout\n * @param {Function} fn Function to debounce\n *\n * @return {Number} timeout\n * @example\n *\n *    const say = (x) => console.log(x)\n *    const debouncedSay = debounce_(false, 1000, say)();\n *\n *    debouncedSay(\"1\")\n *    debouncedSay(\"2\")\n *    debouncedSay(\"3\")\n *\n */\nconst debounce_ = curry((immediate, timeMs, fn) => () => {\n  let timeout;\n\n  return (...args) => {\n    const later = () => {\n      timeout = null;\n\n      if (!immediate) {\n        apply(fn, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, timeMs);\n\n    if (callNow) {\n      apply(fn, args);\n    }\n\n    return timeout;\n  };\n});\n\nexport const debounceImmediate = debounce_(true);\n\nexport const debounce = debounce_(false);\n","import {\n  debounce as ramdaDebounce,\n  debounceImmediate as ramdaDebounceImmediate,\n} from './ramdaDebounce';\nimport { DEBOUNCE } from './constants';\n\nexport const debounce = ramdaDebounce(DEBOUNCE);\nexport const debounceImmediate = ramdaDebounceImmediate(DEBOUNCE);\n","import { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\n\nexport default (\n  horizontal,\n  xScale,\n  height,\n  yScale,\n  width,\n  xAxisTicks,\n  yAxisTicks\n) =>\n  horizontal\n    ? d3AxisBottom()\n        .scale(xScale)\n        .tickSize(height, 0, 0)\n        .ticks(xAxisTicks)\n        .tickFormat('')\n    : d3AxisLeft()\n        .scale(yScale)\n        .tickSize(-width, 0, 0)\n        .ticks(yAxisTicks)\n        .tickFormat('');\n","import { select as d3Select } from 'd3-selection';\n\n/**\n * Extend the x axis path length if all the name values are instance of Date\n *\n * @param {String} id Unique chart id\n * @param {Number} width Chart width\n */\nexport default (id, width) =>\n  d3Select(`#${id} .axis-x path.domain`).attr('d', () => `M0,0.6V0.5H${width}`);\n","import { themes } from './palette';\n\nexport default theme => themes[theme].base[2];\n","import color from 'color';\n\nexport default x =>\n  color(x)\n    .darken(0.2)\n    .hsl()\n    .string();\n","let innerId = 0;\n\nexport default prefix => {\n  if (!prefix) {\n    return null;\n  }\n\n  const id = `silky-charts_${prefix}-${innerId}`;\n  innerId += 1;\n  return id;\n};\n","import compose from 'ramda/src/compose';\nimport length from 'ramda/src/length';\nimport uniq from 'ramda/src/uniq';\nimport prop from 'ramda/src/prop';\nimport map from 'ramda/src/map';\n\nexport default compose(\n  length,\n  uniq,\n  map(prop('name'))\n);\n","export default (series, data) =>\n  series.map(x => data.filter(datum => datum.series === x));\n","import max from 'ramda/src/max';\n\nexport default values => values.reduce(max, 0);\n","import compose from 'ramda/src/compose';\nimport identity from 'ramda/src/identity';\nimport filter from 'ramda/src/filter';\nimport sum from 'ramda/src/sum';\nimport map from 'ramda/src/map';\nimport reduce from 'ramda/src/reduce';\nimport values from 'ramda/src/values';\n\nconst reducer = (a, { name, value }) => {\n  a[name] = a[name] ? [...a[name], value] : [value];\n  return a;\n};\n\n/**\n * Using an optional list of series names calculate the largest possible values\n * adding the values for the series names provided plus the rest of the values\n * present in the data\n *\n * @param {Array} data Chart data\n * @param {Array} seriesList List of series names whose values will be added to\n * calculate the largest possible value\n * @returns {Array} List of calculated values\n */\nexport default (data, seriesList = []) =>\n  compose(\n    map(sum),\n    values,\n    reduce(reducer, {}),\n    seriesList.length\n      ? filter(({ series }) => seriesList.includes(series))\n      : identity\n  )(data);\n","import compose from 'ramda/src/compose';\nimport map from 'ramda/src/map';\nimport prop from 'ramda/src/prop';\nimport uniq from 'ramda/src/uniq';\n\nexport default compose(\n  uniq,\n  map(prop('series'))\n);\n","import { WIDTH } from './constants';\n\nexport default (w1, h1, { top, right, bottom, left }, r) => {\n  const [r1, r2] = r.split(':');\n  const w2 = w1 ? w1 : WIDTH;\n  const h2 = h1 ? h1 : (w2 / r1) * r2;\n\n  if (w1 && h1) {\n    return {\n      width: w1 - left - right,\n      height: h1 - top - bottom,\n    };\n  }\n\n  const width = w1 ? w2 : (h2 / r2) * r1;\n  const height = h1 ? h2 : (w2 / r1) * r2;\n\n  return {\n    width: width - left - right,\n    height: height - top - bottom,\n  };\n};\n","import always from 'ramda/src/always';\nimport cond from 'ramda/src/cond';\nimport equals from 'ramda/src/equals';\nimport identity from 'ramda/src/identity';\nimport T from 'ramda/src/T';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleBand as d3ScaleBand, scaleTime as d3ScaleTime } from 'd3-scale';\nimport { getLength } from './';\nimport { SCALE_TIME, SCALE_BAND } from './constants';\n\nconst timeScale = (data, width, barChart = false) => {\n  const dataLength = getLength(data); // TODO: fix this fucking length\n  const rangeWidth = width / dataLength / 1.8;\n\n  return d3ScaleTime()\n    .domain(d3Extent(data, ({ name }) => name))\n    .rangeRound(barChart ? [rangeWidth, width - rangeWidth] : [0, width]);\n};\n\nconst bandScale = (data, width) =>\n  d3ScaleBand()\n    .domain(data.map(({ name }) => name))\n    .range([0, width])\n    .padding(0.1);\n\n/**\n * Depending on the type of data we are using to represent the X axis ticks we\n * have to use a different D3 scale\n *\n * @param {String} type Type of Scale defined in the constants file\n * @param {Object} data Data\n * @param {Number} width Chart width\n * @param {Boolean} barChart Indicates if the chart use bars in order to\n * calculate the X axis path with for the time scale\n *\n * @return {Function} D3 scale function\n */\nexport default (type, data, width, barChart) =>\n  cond([\n    [equals(SCALE_TIME), always(timeScale(data, width, barChart))],\n    [equals(SCALE_BAND), always(bandScale(data, width))],\n    [(T, identity)],\n  ])(type);\n","import always from 'ramda/src/always';\nimport cond from 'ramda/src/cond';\nimport equals from 'ramda/src/equals';\nimport identity from 'ramda/src/identity';\nimport T from 'ramda/src/T';\nimport { scaleLinear as d3ScaleLinear } from 'd3-scale';\nimport { SCALE_LINEAR } from './constants';\n\nconst linearScale = (max, height) =>\n  d3ScaleLinear()\n    .domain([0, max])\n    .range([height, 0]);\n\nexport default (type, data, height) =>\n  cond([\n    [equals(SCALE_LINEAR), always(linearScale(data, height))],\n    [(T, identity)],\n  ])(type);\n","import { selectAll as d3SelectAll } from 'd3-selection';\n\n/**\n * Rotate the X axis labels to given degrees\n *\n * @param {String} id Unique chart id\n * @param {Number} deg Degrees to rotate\n */\n\nexport default (id, deg) => {\n  const isNegative = deg < 0;\n  d3SelectAll(`#${id} .axis-x .tick text`)\n    .attr('text-anchor', isNegative ? 'end' : 'start')\n    .attr('transform', `translate(${isNegative ? -12 : 12}, 6) rotate(${deg})`);\n};\n","import cond from 'ramda/src/cond';\nimport equals from 'ramda/src/equals';\nimport T from 'ramda/src/T';\nimport { LINE_TYPES } from './constants';\n\nexport default (type, option = null) =>\n  cond([\n    [equals('curveBundle'), () => LINE_TYPES[type].beta(option)],\n    [equals('curveCardinalOpen'), () => LINE_TYPES[type].tension(option)],\n    [equals('curveCatmullRomOpen'), () => LINE_TYPES[type].alpha(option)],\n    [T, () => LINE_TYPES[type]],\n  ])(type);\n","import { allDate } from './';\n\nexport default d => {\n  const isDates = allDate(d.map(({ name }) => name));\n  const data = isDates ? d.map(x => ({ ...x, name: new Date(x.name) })) : d;\n\n  return [isDates, data];\n};\n","import compose from 'ramda/src/compose';\nimport flatten from 'ramda/src/flatten';\nimport map from 'ramda/src/map';\nimport omit from 'ramda/src/omit';\nimport toPairs from 'ramda/src/toPairs';\n\nconst toSingle = datum =>\n  compose(\n    map(([series, value]) => ({ name: datum.name, series, value })),\n    toPairs,\n    omit(['name'])\n  )(datum);\n\nexport default compose(\n  flatten,\n  map(toSingle)\n);\n","import compose from 'ramda/src/compose';\nimport map from 'ramda/src/map';\nimport mergeAll from 'ramda/src/mergeAll';\nimport splitEvery from 'ramda/src/splitEvery';\nimport { getSeries } from './';\n\nexport default data =>\n  compose(\n    map(mergeAll),\n    splitEvery(getSeries(data).length),\n    map(({ name, series, value }) => ({ name, [series]: value }))\n  )(data);\n","import always from 'ramda/src/always';\nimport equals from 'ramda/src/equals';\nimport cond from 'ramda/src/cond';\nimport identity from 'ramda/src/identity';\nimport T from 'ramda/src/T';\n\n/**\n * Use this utility function when you need a value calculation based on the\n * chart width and the data length so you don't have to repeat the code in\n * several places\n *\n * @param {String} option Option to get the value for\n * @param {Number} width Chart width\n * @param {Number} length Data length\n *\n * @return {Number} Calculated number\n */\nexport default (option, width, length) =>\n  cond([\n    [equals('x'), always(width / length / 2.4)],\n    [equals('width'), always(width / (length * 1.1973))],\n    [T, identity],\n  ])(option);\n","import styled from 'styled-components';\nimport { palette } from '../utils';\n\nconst Grid = styled.g.attrs(() => ({\n  className: 'grid',\n}))`\n  path {\n    stroke: transparent;\n  }\n\n  line {\n    stroke: ${palette.grey};\n  }\n`;\n\nexport default Grid;\n","import styled from 'styled-components';\n\nconst Label = styled.text.attrs(({ axis, margin, width, height }) => ({\n  className: `${axis}-axis-label`,\n  x: axis === 'x' ? width / 2 : -(height / 2),\n  y: axis === 'x' ? height + margin.bottom / 1.5 : -(margin.left / 1.5),\n}))`\n  text-anchor: middle;\n  transform: ${({ axis }) => axis === 'y' && 'rotate(-90deg)'};\n`;\n\nexport default Label;\n","import React, { Fragment, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Circle, Path, Tooltip, TooltipItem } from './';\n\nconst LineDatum = ({\n  chart,\n  color,\n  d,\n  data,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n  xScale,\n  yScale,\n  isDates,\n}) => {\n  const [tooltip, setTooltip] = useState({\n    pageX: null,\n    pageY: null,\n    show: false,\n  });\n\n  return (\n    <Fragment>\n      <Path chart={chart} d={d} className=\"line-path\" strokeColor={color} />\n      <g className=\"line-dot-group\">\n        {data.map(({ name, value }, idx) => (\n          <Circle\n            key={idx}\n            chart=\"bar-line\"\n            strokeColor={color}\n            cx={isDates ? xScale(name) : xScale(name) + xScale.bandwidth() / 2}\n            cy={yScale(value)}\n            r={5}\n            onClick={onClick}\n            onMouseEnter={event => {\n              setTooltip(state => ({ ...state, show: true }));\n              onMouseEnter(event);\n            }}\n            onMouseLeave={event => {\n              setTooltip(state => ({ ...state, show: false }));\n              onMouseLeave(event);\n            }}\n            onMouseMove={event => {\n              event.persist();\n              const { pageX, pageY } = event;\n              setTooltip(state => ({ ...state, name, pageX, pageY, value }));\n            }}\n          />\n        ))}\n      </g>\n      {tooltip.show &&\n        createPortal(\n          <Tooltip pageX={tooltip.pageX} pageY={tooltip.pageY}>\n            <TooltipItem\n              color={color}\n              name={tooltip.name}\n              value={tooltip.value}\n            />\n          </Tooltip>,\n          document.body\n        )}\n    </Fragment>\n  );\n};\n\nexport default LineDatum;\n","import styled from 'styled-components';\n\nconst MainGroup = styled.g.attrs(({ margin: { left, top } }) => ({\n  className: 'silky-charts-container',\n  transform: `translate(${left}, ${top})`,\n}))``;\n\nexport default MainGroup;\n","import styled from 'styled-components';\nimport { getHoverColor } from '../utils';\nimport { LINE_STROKE_WIDTH } from '../utils/constants';\n\nconst Path = styled.path.attrs(({ chart }) => ({ className: chart }))`\n  fill: ${({ fillColor }) => fillColor || 'none'};\n  stroke: ${({ strokeColor }) => strokeColor || 'none'};\n  stroke-width: ${LINE_STROKE_WIDTH};\n  pointer-events: ${({ chart }) => chart === 'bar-line' && 'none'}\n\n  &:hover {\n    fill: ${({ chart, fillColor }) =>\n      chart === 'stacked-area' && getHoverColor(fillColor)};\n  }\n`;\n\nexport default Path;\n","import styled from 'styled-components';\nimport { getHoverColor } from '../utils';\n\nconst Rect = styled.rect.attrs(({ chart, position: { x, y } }) => ({\n  x,\n  y,\n  className: chart,\n}))`\n  fill: ${({ fillColor }) => fillColor};\n  height: ${({ size }) => size.height}px;\n  width: ${({ size }) => size.width}px;\n\n  &:hover {\n    fill: ${({ fillColor }) => getHoverColor(fillColor)};\n  }\n`;\n\nexport default Rect;\n","import React from 'react';\nimport head from 'ramda/src/head';\nimport last from 'ramda/src/last';\nimport BarDatum from './BarDatum';\nimport { palette, valueFor, getLength } from '../utils';\n\nconst StackedBarDatum = ({\n  data,\n  series,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n  isDates,\n  theme,\n  x,\n  y,\n  width,\n  height,\n}) =>\n  series.map(layer => (\n    <g key={layer.index} className={`${layer.key}-layer`}>\n      {layer.map((datum, idx) => {\n        const value = last(datum) - head(datum);\n        const name = datum.data.name;\n        return (\n          <BarDatum\n            key={idx}\n            datum={{ name, value }}\n            x={\n              isDates\n                ? x(name) - valueFor('x', width, getLength(data))\n                : x(name)\n            }\n            y={y(last(datum))}\n            width={\n              isDates\n                ? valueFor('width', width, getLength(data))\n                : x.bandwidth()\n            }\n            height={height - y(value)}\n            color={palette.themes[theme].base[layer.index]}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n          />\n        );\n      })}\n    </g>\n  ));\n\nexport default StackedBarDatum;\n","import styled from 'styled-components';\n\nconst SVG = styled.svg.attrs(({ identifier }) => ({\n  id: identifier,\n  className: 'silky-charts',\n}))`\n  height: ${({ size }) => size.height}px;\n  width: ${({ size }) => size.width}px;\n`;\n\nexport default SVG;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { white, grey } from '../utils/palette';\n\nconst Container = styled.div.attrs(({ pageX, pageY, width, height }) => ({\n  className: 'silky-charts-tooltip',\n  style: {\n    left: `${pageX - width / 2}px`,\n    top: `${pageY - height - 10}px`,\n  },\n}))`\n  background-color: ${white};\n  border: 1px solid ${grey};\n  border-radius: 4px;\n  box-shadow: 2px 2px 4px 0px rgba(0, 0, 0, 0.75);\n  padding: 10px;\n  pointer-events: none;\n  position: absolute;\n  text-align: center;\n  left: 0;\n  top: 0;\n  z-index: 10;\n`;\n\nconst Tooltip = props => {\n  const tooltipRef = useRef();\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    const { offsetWidth, offsetHeight } = tooltipRef.current;\n    setSize({ width: offsetWidth, height: offsetHeight });\n  }, []);\n\n  return (\n    <Container ref={tooltipRef} {...size} {...props}>\n      {props.children}\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport styled from 'styled-components';\nimport type from 'ramda/src/type';\nimport { isValid, format } from 'date-fns';\nimport { isISODate } from '../utils';\nimport { grey } from '../utils/palette';\nimport { TOOLTIP_DATE_FORMAT } from '../utils/constants';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Swatch = styled.span`\n  background-color: ${({ swatchColor }) => swatchColor || grey};\n  margin-right: 10px;\n  padding: 0 4px;\n`;\n\nconst Data = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Name = styled.span`\n  margin-bottom: 4px;\n`;\n\nconst Value = styled.span`\n  font-size: 1.2em;\n`;\n\nconst TooltipItem = ({\n  color,\n  dateFormat = TOOLTIP_DATE_FORMAT,\n  name,\n  value,\n}) => (\n  <Container>\n    <Swatch swatchColor={color} />\n    <Data>\n      <Name>\n        {type(name) === 'Date' && isValid(name)\n          ? format(name, dateFormat)\n          : name}\n      </Name>\n      <Value>{value}</Value>\n    </Data>\n  </Container>\n);\n\nexport default TooltipItem;\n"],"names":["Axis","styled","g","attrs","axis","position","className","transform","x","y","BarDatum","color","datum","width","height","onClick","onMouseEnter","onMouseLeave","withTooltip","tooltip","useState","pageX","pageY","show","setTooltip","React","Fragment","event","state","persist","createPortal","document","body","white","black","grey","themes","red","base","ref","orange","yellow","green","tealBlue","blue","purple","pink","ASPECT_RATIO","DEBOUNCE","MARGIN","top","right","bottom","left","ROTATION","SIZE","isSizeSet","TICKS","TIME_FORMAT","TOOLTIP_DATE_FORMAT","WIDTH","SCALE_BAND","SCALE_LINEAR","SCALE_PADDING","SCALE_TIME","THEME","SECONDARY_THEME","LINE_STROKE_WIDTH","LINE_TYPE","LINE_TYPES","curveBasis","curveBasisClosed","curveBasisOpen","curveBundle","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","Circle","circle","chart","strokeColor","DataGroup","compose","isValid","parseISO","all","isISODate","idx","stack","data","forEach","values","key","series","stackedValues","keys","d3Stack","order","stackOrderNone","offset","stackOffsetNone","toPairs","groupBy","prop","str","replace","toLowerCase","debounce_","curry","immediate","timeMs","fn","timeout","args","later","apply","callNow","clearTimeout","setTimeout","debounceImmediate","debounce","ramdaDebounce","ramdaDebounceImmediate","horizontal","xScale","yScale","xAxisTicks","yAxisTicks","d3AxisBottom","scale","tickSize","ticks","tickFormat","d3AxisLeft","id","d3Select","attr","theme","darken","hsl","string","innerId","prefix","length","uniq","map","filter","reduce","max","reducer","a","name","value","seriesList","sum","includes","identity","w1","h1","r","split","r1","r2","w2","h2","timeScale","barChart","dataLength","getLength","rangeWidth","d3ScaleTime","domain","d3Extent","rangeRound","bandScale","d3ScaleBand","range","padding","type","cond","equals","always","T","linearScale","d3ScaleLinear","deg","isNegative","d3SelectAll","option","beta","tension","alpha","d","isDates","allDate","Date","toSingle","omit","flatten","mergeAll","splitEvery","getSeries","Grid","palette","Label","text","margin","LineDatum","bandwidth","MainGroup","Path","path","fillColor","getHoverColor","Rect","rect","size","StackedBarDatum","layer","index","last","head","valueFor","SVG","svg","identifier","Container","div","style","Tooltip","props","tooltipRef","useRef","setSize","useEffect","current","offsetWidth","offsetHeight","children","Swatch","span","swatchColor","Data","Name","Value","TooltipItem","dateFormat","format"],"mappings":"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"}