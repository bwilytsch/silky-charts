{"version":3,"file":"StackedArea.js","sources":["../src/StackedArea.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport {\n  scaleTime as d3ScaleTime,\n  scaleLinear as d3ScaleLinear,\n} from 'd3-scale';\nimport { select as d3Select } from 'd3-selection';\nimport { area as d3Area } from 'd3-shape';\nimport { timeFormat as d3TimeFormat } from 'd3-time-format';\nimport identity from 'ramda/src/identity';\nimport { GraphContext } from './contexts';\nimport {\n  AreaDatum,\n  Axis,\n  DataSource,\n  Grid,\n  Label,\n  MainGroup,\n  SVG,\n  Title,\n} from './components';\nimport useResize from './hooks/useResize';\nimport {\n  appendStackedValues,\n  buildStack,\n  bySeries,\n  drawGrid,\n  extent,\n  getId,\n  getMax,\n  getStackedMax,\n  getSeries,\n  getSize,\n  mapTooltipData,\n  palette,\n  rotateXLabels,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SIZE,\n  THEME,\n  TIME_FORMAT,\n  X_TICKS,\n  Y_TICKS,\n} from './utils/constants';\n\nconst StackedArea = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  dataSource,\n  dateFormat = TIME_FORMAT,\n  grid,\n  height: svgHeight = undefined,\n  horizontal,\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  responsive = false,\n  staticTooltip,\n  theme = THEME,\n  title,\n  tooltip,\n  width: svgWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  xAxisTicks = X_TICKS,\n  yAxisChartLabel,\n  yAxisTicks = Y_TICKS,\n}) => {\n  const svgRef = useRef(null);\n  const [id] = useState(getId('stacked-area'));\n  const timeFormat = d3TimeFormat(dateFormat);\n  const [{ width, height, isSizeSet }, setSize] = useState(SIZE);\n  let [isDates, data, names] = setupData(chartData);\n  data = appendStackedValues(\n    buildStack(getSeries(data))(toStackedForm(data)),\n    data\n  );\n\n  if (!isDates) {\n    throw new TypeError(\n      'StackedArea charts only accept valid dates in the \"name\" section of the dataset.'\n    );\n  }\n\n  const xScale = d3ScaleTime()\n    .domain(extent(data.map(({ name }) => name)))\n    .range([0, width]);\n\n  const yScale = d3ScaleLinear()\n    .domain([0, getMax(getStackedMax(data))])\n    .range([height, 0]);\n\n  const area = d3Area()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name))\n    .y0(({ stackedValues }) => yScale(stackedValues[0]))\n    .y1(({ stackedValues }) => yScale(stackedValues[1]));\n\n  const dataPositions = names.map(name => xScale(name));\n  const tooltipData = mapTooltipData(data, dataPositions);\n\n  const handleSize = () => {\n    const offsetWidth = svgRef.current.parentElement.offsetWidth;\n    if ((svgWidth || svgHeight) && !isSizeSet) {\n      setSize({\n        ...getSize(svgWidth, svgHeight, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    } else if (offsetWidth !== svgWidth - (margin.left + margin.right)) {\n      setSize({\n        ...getSize(offsetWidth, undefined, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    }\n  };\n\n  useResize(responsive, handleSize);\n\n  return (\n    <GraphContext.Provider\n      value={{ margin, node: svgRef.current, staticTooltip }}\n    >\n      <SVG\n        identifier={id}\n        size={{\n          width: svgWidth || width + margin.left + margin.right,\n          height: svgHeight || height + margin.top + margin.bottom,\n        }}\n        ref={svgRef}\n      >\n        <MainGroup margin={margin}>\n          {grid && (\n            <Grid\n              ref={node =>\n                d3Select(node).call(\n                  drawGrid(\n                    horizontal,\n                    xScale,\n                    height,\n                    yScale,\n                    width,\n                    xAxisTicks,\n                    yAxisTicks\n                  )\n                )\n              }\n            />\n          )}\n\n          {title && (\n            <Title margin={margin} width={width}>\n              {title}\n            </Title>\n          )}\n\n          {xAxisChartLabel && (\n            <Label axis=\"x\" margin={margin} width={width} height={height}>\n              {xAxisChartLabel}\n            </Label>\n          )}\n\n          {yAxisChartLabel && (\n            <Label axis=\"y\" margin={margin} width={width} height={height}>\n              {yAxisChartLabel}\n            </Label>\n          )}\n\n          {dataSource && (\n            <DataSource\n              dataSource={dataSource}\n              height={height}\n              margin={margin}\n              width={width}\n            />\n          )}\n\n          {bySeries(data).map(([series, datum], idx) => (\n            <AreaDatum\n              area={area}\n              dataPositions={dataPositions}\n              datum={datum}\n              fillColor={palette.themes[theme][idx]}\n              key={idx}\n              onClick={onClick}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              series={series}\n              theme={theme}\n              tooltip={tooltip}\n              tooltipData={tooltipData}\n            />\n          ))}\n\n          <Axis\n            axis=\"x\"\n            position={{ x: 0, y: height }}\n            ref={node => {\n              d3Select(node).call(\n                d3AxisBottom(xScale)\n                  .ticks(xAxisTicks)\n                  .tickFormat(timeFormat)\n              );\n              xAxisLabelRotation && rotateXLabels(id, xAxisLabelRotationValue);\n            }}\n          />\n\n          <Axis\n            axis=\"y\"\n            ref={node =>\n              d3Select(node).call(d3AxisLeft(yScale).ticks(yAxisTicks))\n            }\n          />\n        </MainGroup>\n      </SVG>\n    </GraphContext.Provider>\n  );\n};\n\nexport default StackedArea;\n"],"names":["StackedArea","aspectRatio","ASPECT_RATIO","chartData","data","dataSource","dateFormat","TIME_FORMAT","grid","height","svgHeight","undefined","horizontal","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","responsive","staticTooltip","theme","THEME","title","tooltip","width","svgWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","xAxisTicks","X_TICKS","yAxisChartLabel","yAxisTicks","Y_TICKS","svgRef","useRef","useState","getId","id","timeFormat","d3TimeFormat","SIZE","isSizeSet","setSize","setupData","isDates","names","appendStackedValues","buildStack","getSeries","toStackedForm","TypeError","xScale","d3ScaleTime","domain","extent","map","name","range","yScale","d3ScaleLinear","getMax","getStackedMax","area","d3Area","curve","setLineType","x","y0","stackedValues","y1","dataPositions","tooltipData","mapTooltipData","handleSize","offsetWidth","current","parentElement","getSize","left","right","useResize","React","GraphContext","node","SVG","top","bottom","MainGroup","Grid","d3Select","call","drawGrid","Title","Label","DataSource","bySeries","idx","series","datum","AreaDatum","palette","themes","Axis","y","d3AxisBottom","ticks","tickFormat","rotateXLabels","d3AxisLeft"],"mappings":"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"}