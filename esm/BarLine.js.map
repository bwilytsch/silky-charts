{"version":3,"file":"BarLine.js","sources":["../src/BarLine.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport {\n  scaleBand as d3ScaleBand,\n  scaleLinear as d3ScaleLinear,\n} from 'd3-scale';\nimport { select as d3Select } from 'd3-selection';\nimport { line as d3Line } from 'd3-shape';\nimport { timeFormat as d3TimeFormat } from 'd3-time-format';\nimport head from 'ramda/src/head';\nimport identity from 'ramda/src/identity';\nimport {\n  Axis,\n  Grid,\n  Label,\n  LineDatum,\n  MainGroup,\n  Source,\n  StackedBarDatum,\n  SVG,\n  Title,\n} from './components';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SCALE_PADDING,\n  SECONDARY_THEME,\n  SIZE,\n  THEME,\n  TICKS,\n  TIME_FORMAT,\n} from './utils/constants';\nimport {\n  buildStack,\n  debounce,\n  drawGrid,\n  getId,\n  getLineDataForSeries,\n  getMax,\n  getStackedMax,\n  getSize,\n  palette,\n  rotateXLabels,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\n\nconst BarLine = ({\n  aspectRatio = ASPECT_RATIO,\n  title,\n  data: chartData,\n  dateFormat = TIME_FORMAT,\n  grid,\n  height: svgHeight = undefined,\n  horizontal,\n  lineSeries = [],\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  padding: xScalePadding = SCALE_PADDING,\n  responsive,\n  secondaryTheme = SECONDARY_THEME,\n  stackedSeries = [],\n  theme = THEME,\n  tooltip,\n  sourceLabel,\n  width: svgWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  xAxisTicks = TICKS,\n  yAxisChartLabel,\n  yAxisTicks = TICKS,\n}) => {\n  const svgRef = useRef();\n  const [id] = useState(getId('bar-line'));\n  const timeFormat = d3TimeFormat(dateFormat);\n  const [{ width, height, isSizeSet }, setSize] = useState(SIZE);\n  const [isDates, data] = setupData(chartData);\n  const stack = buildStack(stackedSeries)(toStackedForm(data));\n\n  const xScale = d3ScaleBand()\n    .domain(data.map(({ name }) => name))\n    .range([0, width])\n    .padding(xScalePadding);\n\n  const yScale = d3ScaleLinear()\n    .domain([0, getMax(getStackedMax(data, stackedSeries))])\n    .range([height, 0]);\n\n  const line = d3Line()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name) + xScale.bandwidth() / 2)\n    .y(({ value }) => yScale(value));\n\n  const lineData = getLineDataForSeries(lineSeries, data);\n\n  const handleSize = () => {\n    const offsetWidth = svgRef.current.parentElement.offsetWidth;\n    if ((svgWidth || svgHeight) && !isSizeSet) {\n      setSize({\n        ...getSize(svgWidth, svgHeight, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    } else if (offsetWidth !== svgWidth - (margin.left + margin.right)) {\n      setSize({\n        ...getSize(offsetWidth, undefined, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    }\n  };\n\n  const handleResize = debounce(handleSize)();\n\n  useEffect(() => {\n    handleSize();\n    responsive && window.addEventListener('resize', handleResize);\n\n    return () => {\n      responsive && window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <SVG\n      identifier={id}\n      size={{\n        width: svgWidth || width + margin.left + margin.right,\n        height: svgHeight || height + margin.top + margin.bottom,\n      }}\n      ref={svgRef}\n    >\n      <MainGroup margin={margin}>\n        {grid && (\n          <Grid\n            ref={node =>\n              d3Select(node).call(\n                drawGrid(\n                  horizontal,\n                  xScale,\n                  height,\n                  yScale,\n                  width,\n                  xAxisTicks,\n                  yAxisTicks\n                )\n              )\n            }\n          />\n        )}\n\n        {title && (\n          <Title margin={margin} width={width}>\n            {title}\n          </Title>\n        )}\n\n        {xAxisChartLabel && (\n          <Label axis=\"x\" margin={margin} width={width} height={height}>\n            {xAxisChartLabel}\n          </Label>\n        )}\n\n        {yAxisChartLabel && (\n          <Label axis=\"y\" margin={margin} width={width} height={height}>\n            {yAxisChartLabel}\n          </Label>\n        )}\n\n        {sourceLabel && (\n          <Source margin={margin} width={width} height={height}>\n            {sourceLabel}\n          </Source>\n        )}\n\n        <StackedBarDatum\n          data={data}\n          series={stack}\n          theme={theme}\n          x={xScale}\n          y={yScale}\n          width={width}\n          height={height}\n          onClick={onClick}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          tooltip={tooltip}\n        />\n\n        <Axis\n          axis=\"x\"\n          position={{ x: 0, y: height }}\n          ref={node => {\n            d3Select(node).call(\n              d3AxisBottom(xScale)\n                .ticks(xAxisTicks)\n                .tickFormat(isDates ? timeFormat : null)\n            );\n            xAxisLabelRotation && rotateXLabels(id, xAxisLabelRotationValue);\n          }}\n        />\n        <Axis\n          axis=\"y\"\n          ref={node =>\n            d3Select(node).call(d3AxisLeft(yScale).ticks(yAxisTicks))\n          }\n        />\n\n        {lineData.map((datum, idx) => (\n          <g className={`${head(datum)['series']}-layer`} key={idx}>\n            <LineDatum\n              chart=\"bar-line\"\n              data={datum}\n              color={palette.themes[secondaryTheme].base[idx]}\n              d={line(datum)}\n              xScale={xScale}\n              yScale={yScale}\n              onClick={onClick}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              tooltip={tooltip}\n            />\n          </g>\n        ))}\n      </MainGroup>\n    </SVG>\n  );\n};\n\nexport default BarLine;\n"],"names":["BarLine","aspectRatio","ASPECT_RATIO","title","chartData","data","dateFormat","TIME_FORMAT","grid","height","svgHeight","undefined","horizontal","lineSeries","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","padding","xScalePadding","SCALE_PADDING","responsive","secondaryTheme","SECONDARY_THEME","stackedSeries","theme","THEME","tooltip","sourceLabel","width","svgWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","xAxisTicks","TICKS","yAxisChartLabel","yAxisTicks","svgRef","useRef","useState","getId","id","timeFormat","d3TimeFormat","SIZE","isSizeSet","setSize","setupData","isDates","stack","buildStack","toStackedForm","xScale","d3ScaleBand","domain","map","name","range","yScale","d3ScaleLinear","getMax","getStackedMax","line","d3Line","curve","setLineType","x","bandwidth","y","value","lineData","getLineDataForSeries","handleSize","offsetWidth","current","parentElement","getSize","left","right","handleResize","debounce","useEffect","window","addEventListener","removeEventListener","top","bottom","node","d3Select","call","drawGrid","d3AxisBottom","ticks","tickFormat","rotateXLabels","d3AxisLeft","datum","idx","head","palette","themes","base"],"mappings":"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"}