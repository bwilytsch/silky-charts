{"version":3,"file":"BarLine.js","sources":["../src/BarLine.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport {\n  scaleBand as d3ScaleBand,\n  scaleLinear as d3ScaleLinear,\n} from 'd3-scale';\nimport { select as d3Select } from 'd3-selection';\nimport { line as d3Line } from 'd3-shape';\nimport { timeFormat as d3TimeFormat } from 'd3-time-format';\nimport head from 'ramda/src/head';\nimport identity from 'ramda/src/identity';\nimport {\n  Axis,\n  Grid,\n  Label,\n  LineDatum,\n  MainGroup,\n  DataSource,\n  StackedBarDatum,\n  SVG,\n  Title,\n} from './components';\nimport useResize from './hooks/useResize';\nimport {\n  buildStack,\n  drawGrid,\n  getId,\n  getLineDataForSeries,\n  getMax,\n  getStackedMax,\n  getSize,\n  palette,\n  rotateXLabels,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SCALE_PADDING,\n  SECONDARY_THEME,\n  SIZE,\n  THEME,\n  X_TICKS,\n  Y_TICKS,\n  TIME_FORMAT,\n} from './utils/constants';\n\nconst BarLine = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  dataSource,\n  dateFormat = TIME_FORMAT,\n  grid,\n  height: svgHeight = undefined,\n  horizontal,\n  lineSeries = [],\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  padding: xScalePadding = SCALE_PADDING,\n  responsive,\n  secondaryTheme = SECONDARY_THEME,\n  stackedSeries = [],\n  theme = THEME,\n  title,\n  tooltip,\n  width: svgWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  xAxisTicks = X_TICKS,\n  yAxisChartLabel,\n  yAxisTicks = Y_TICKS,\n}) => {\n  const svgRef = useRef();\n  const [id] = useState(getId('bar-line'));\n  const timeFormat = d3TimeFormat(dateFormat);\n  const [{ width, height, isSizeSet }, setSize] = useState(SIZE);\n  const [isDates, data] = setupData(chartData);\n  const stack = buildStack(stackedSeries)(toStackedForm(data));\n\n  const xScale = d3ScaleBand()\n    .domain(data.map(({ name }) => name))\n    .range([0, width])\n    .padding(xScalePadding);\n\n  const yScale = d3ScaleLinear()\n    .domain([0, getMax(getStackedMax(data, stackedSeries))])\n    .range([height, 0]);\n\n  const line = d3Line()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name) + xScale.bandwidth() / 2)\n    .y(({ value }) => yScale(value));\n\n  const lineData = getLineDataForSeries(lineSeries, data);\n\n  const handleSize = () => {\n    const offsetWidth = svgRef.current.parentElement.offsetWidth;\n    if ((svgWidth || svgHeight) && !isSizeSet) {\n      setSize({\n        ...getSize(svgWidth, svgHeight, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    } else if (offsetWidth !== svgWidth - (margin.left + margin.right)) {\n      setSize({\n        ...getSize(offsetWidth, undefined, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    }\n  };\n\n  useResize(responsive, handleSize);\n\n  return (\n    <SVG\n      identifier={id}\n      size={{\n        width: svgWidth || width + margin.left + margin.right,\n        height: svgHeight || height + margin.top + margin.bottom,\n      }}\n      ref={svgRef}\n    >\n      <MainGroup margin={margin}>\n        {grid && (\n          <Grid\n            ref={node =>\n              d3Select(node).call(\n                drawGrid(\n                  horizontal,\n                  xScale,\n                  height,\n                  yScale,\n                  width,\n                  xAxisTicks,\n                  yAxisTicks\n                )\n              )\n            }\n          />\n        )}\n\n        {title && (\n          <Title margin={margin} width={width}>\n            {title}\n          </Title>\n        )}\n\n        {xAxisChartLabel && (\n          <Label axis=\"x\" margin={margin} width={width} height={height}>\n            {xAxisChartLabel}\n          </Label>\n        )}\n\n        {yAxisChartLabel && (\n          <Label axis=\"y\" margin={margin} width={width} height={height}>\n            {yAxisChartLabel}\n          </Label>\n        )}\n\n        {dataSource && (\n          <DataSource\n            dataSource={dataSource}\n            height={height}\n            margin={margin}\n            width={width}\n          />\n        )}\n\n        <StackedBarDatum\n          data={data}\n          series={stack}\n          theme={theme}\n          x={xScale}\n          y={yScale}\n          width={width}\n          height={height}\n          onClick={onClick}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          tooltip={tooltip}\n        />\n\n        <Axis\n          axis=\"x\"\n          position={{ x: 0, y: height }}\n          ref={node => {\n            d3Select(node).call(\n              d3AxisBottom(xScale)\n                .ticks(xAxisTicks)\n                .tickFormat(isDates ? timeFormat : null)\n            );\n            xAxisLabelRotation && rotateXLabels(id, xAxisLabelRotationValue);\n          }}\n        />\n\n        <Axis\n          axis=\"y\"\n          ref={node =>\n            d3Select(node).call(d3AxisLeft(yScale).ticks(yAxisTicks))\n          }\n        />\n\n        {lineData.map((datum, idx) => (\n          <g className={`${head(datum)['series']}-layer`} key={idx}>\n            <LineDatum\n              chart=\"bar-line\"\n              data={datum}\n              color={palette.themes[secondaryTheme][idx]}\n              d={line(datum)}\n              xScale={xScale}\n              yScale={yScale}\n              onClick={onClick}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              tooltip={tooltip}\n            />\n          </g>\n        ))}\n      </MainGroup>\n    </SVG>\n  );\n};\n\nexport default BarLine;\n"],"names":["BarLine","aspectRatio","ASPECT_RATIO","chartData","data","dataSource","dateFormat","TIME_FORMAT","grid","height","svgHeight","undefined","horizontal","lineSeries","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","padding","xScalePadding","SCALE_PADDING","responsive","secondaryTheme","SECONDARY_THEME","stackedSeries","theme","THEME","title","tooltip","width","svgWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","xAxisTicks","X_TICKS","yAxisChartLabel","yAxisTicks","Y_TICKS","svgRef","useRef","useState","getId","id","timeFormat","d3TimeFormat","SIZE","isSizeSet","setSize","setupData","isDates","stack","buildStack","toStackedForm","xScale","d3ScaleBand","domain","map","name","range","yScale","d3ScaleLinear","getMax","getStackedMax","line","d3Line","curve","setLineType","x","bandwidth","y","value","lineData","getLineDataForSeries","handleSize","offsetWidth","current","parentElement","getSize","left","right","useResize","top","bottom","node","d3Select","call","drawGrid","d3AxisBottom","ticks","tickFormat","rotateXLabels","d3AxisLeft","datum","idx","head","palette","themes"],"mappings":"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"}