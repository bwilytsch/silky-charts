{"version":3,"file":"StackedArea.js","sources":["../src/StackedArea.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  scaleTime as d3ScaleTime,\n  scaleLinear as d3ScaleLinear,\n} from 'd3-scale';\nimport { select as d3Select } from 'd3-selection';\nimport { area as d3Area } from 'd3-shape';\nimport identity from 'ramda/src/identity';\nimport { GraphContext } from './contexts';\nimport {\n  AreaDatum,\n  Axis,\n  DataSource,\n  Grid,\n  Label,\n  MainGroup,\n  SVG,\n  Title,\n} from './components';\nimport useResize from './hooks/useResize';\nimport {\n  appendStackedValues,\n  buildStack,\n  bySeries,\n  drawGrid,\n  extent,\n  getMax,\n  getStackedMax,\n  getSeries,\n  mapTooltipData,\n  palette,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SIZE,\n  THEME,\n  TIME_FORMAT,\n  X_TICKS,\n  Y_TICKS,\n} from './utils/constants';\n\nconst StackedArea = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  dataSource,\n  dateFormat = TIME_FORMAT,\n  grid,\n  height: graphHeight = undefined,\n  horizontal,\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  outlinedStyle,\n  responsive = false,\n  staticTooltip,\n  theme = THEME,\n  title,\n  tooltip,\n  visibleTicks,\n  width: graphWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  xAxisTicks = X_TICKS,\n  yAxisChartLabel,\n  yAxisTicks = Y_TICKS,\n}) => {\n  const svgRef = useRef(null);\n  const [{ width, height }, setSize] = useState(SIZE);\n  let [isDates, data, names] = setupData(chartData);\n  data = appendStackedValues(\n    buildStack(getSeries(data))(toStackedForm(data)),\n    data\n  );\n\n  if (!isDates) {\n    throw new TypeError(\n      'StackedArea charts only accept valid dates in the \"name\" section of the dataset.'\n    );\n  }\n\n  const xScale = d3ScaleTime()\n    .domain(extent(data.map(({ name }) => name)))\n    .range([0, width]);\n\n  const yScale = d3ScaleLinear()\n    .domain([0, getMax(getStackedMax(data))])\n    .range([height, 0]);\n\n  const area = d3Area()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name))\n    .y0(({ stackedValues }) => yScale(stackedValues[0]))\n    .y1(({ stackedValues }) => yScale(stackedValues[1]));\n\n  const dataPositions = names.map(name => xScale(name));\n  const tooltipData = mapTooltipData(data, dataPositions);\n\n  useResize({\n    aspectRatio,\n    graphHeight,\n    graphWidth,\n    margin,\n    responsive,\n    setSize,\n    svgRef,\n  });\n\n  return (\n    <GraphContext.Provider\n      value={{\n        dateFormat,\n        margin,\n        node: svgRef.current,\n        outlinedStyle,\n        staticTooltip,\n        visibleTicks,\n        xAxisLabelRotation,\n        xAxisLabelRotationValue,\n      }}\n    >\n      <SVG\n        size={{\n          width: graphWidth || width + margin.left + margin.right,\n          height: graphHeight || height + margin.top + margin.bottom,\n        }}\n        ref={svgRef}\n      >\n        <MainGroup margin={margin}>\n          {grid && (\n            <Grid\n              ref={node =>\n                d3Select(node).call(\n                  drawGrid(\n                    horizontal,\n                    xScale,\n                    height,\n                    yScale,\n                    width,\n                    xAxisTicks,\n                    yAxisTicks\n                  )\n                )\n              }\n            />\n          )}\n\n          {title && (\n            <Title margin={margin} width={width}>\n              {title}\n            </Title>\n          )}\n\n          {xAxisChartLabel && (\n            <Label axis=\"x\" margin={margin} width={width} height={height}>\n              {xAxisChartLabel}\n            </Label>\n          )}\n\n          {yAxisChartLabel && (\n            <Label axis=\"y\" margin={margin} width={width} height={height}>\n              {yAxisChartLabel}\n            </Label>\n          )}\n\n          {dataSource && (\n            <DataSource\n              dataSource={dataSource}\n              height={height}\n              margin={margin}\n              width={width}\n            />\n          )}\n\n          {bySeries(data).map(([series, datum], idx) => (\n            <AreaDatum\n              area={area}\n              dataPositions={dataPositions}\n              datum={datum}\n              fillColor={palette.themes[theme][idx]}\n              key={idx}\n              onClick={onClick}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              series={series}\n              theme={theme}\n              tooltip={tooltip}\n              tooltipData={tooltipData}\n            />\n          ))}\n\n          <Axis\n            axis=\"x\"\n            axisTicks={xAxisTicks}\n            orientation=\"bottom\"\n            position={{ x: 0, y: height }}\n            scale={xScale}\n            toDate={isDates}\n          />\n\n          <Axis\n            axis=\"y\"\n            axisTicks={yAxisTicks}\n            orientation=\"left\"\n            scale={yScale}\n          />\n        </MainGroup>\n      </SVG>\n    </GraphContext.Provider>\n  );\n};\n\nexport default StackedArea;\n"],"names":["StackedArea","aspectRatio","ASPECT_RATIO","chartData","data","dataSource","dateFormat","TIME_FORMAT","grid","height","graphHeight","undefined","horizontal","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","outlinedStyle","responsive","staticTooltip","theme","THEME","title","tooltip","visibleTicks","width","graphWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","xAxisTicks","X_TICKS","yAxisChartLabel","yAxisTicks","Y_TICKS","svgRef","useRef","useState","SIZE","setSize","setupData","isDates","names","appendStackedValues","buildStack","getSeries","toStackedForm","TypeError","xScale","d3ScaleTime","domain","extent","map","name","range","yScale","d3ScaleLinear","getMax","getStackedMax","area","d3Area","curve","setLineType","x","y0","stackedValues","y1","dataPositions","tooltipData","mapTooltipData","useResize","node","current","left","right","top","bottom","d3Select","call","drawGrid","bySeries","idx","series","datum","palette","themes","y"],"mappings":"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"}