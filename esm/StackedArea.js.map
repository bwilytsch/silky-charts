{"version":3,"file":"StackedArea.js","sources":["../src/StackedArea.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport identity from 'ramda/src/identity';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\nimport { area as d3Area } from 'd3-shape';\nimport { Axis, Grid, Label, Path, SVG } from './components';\nimport {\n  appendStackedValues,\n  buildStack,\n  bySeries,\n  classify,\n  debounce,\n  drawGrid,\n  getId,\n  getMax,\n  getStackedMax,\n  getSeries,\n  getSize,\n  getXScale,\n  getYScale,\n  palette,\n  rotateXLabels,\n  setLineType,\n  setupData,\n  toStackedForm,\n} from './utils';\nimport {\n  ASPECT_RATIO,\n  LINE_TYPE,\n  MARGIN,\n  ROTATION,\n  SCALE_BAND,\n  SCALE_LINEAR,\n  SCALE_TIME,\n  SIZE,\n  THEME,\n  TICKS,\n} from './utils/constants';\n\nconst StackedArea = ({\n  aspectRatio = ASPECT_RATIO,\n  data: chartData,\n  grid,\n  height: svgHeight = undefined,\n  horizontal,\n  lineSeries = [],\n  lineType = LINE_TYPE,\n  lineTypeOption = null,\n  margin = MARGIN,\n  onClick = identity,\n  onMouseEnter = identity,\n  onMouseLeave = identity,\n  responsive = false,\n  theme = THEME,\n  ticks = TICKS,\n  width: svgWidth = undefined,\n  xAxisChartLabel,\n  xAxisLabelRotation,\n  xAxisLabelRotationValue = ROTATION,\n  yAxisChartLabel,\n}) => {\n  const svgRef = useRef();\n  const [id] = useState(getId('stacked-area'));\n  const [{ width, height, isSizeSet }, setSize] = useState(SIZE);\n  let [isDates, data] = useMemo(() => setupData(chartData), chartData);\n  data = useMemo(\n    () =>\n      appendStackedValues(\n        buildStack(getSeries(data))(toStackedForm(data)),\n        data\n      ),\n    data\n  );\n\n  const xScale = getXScale(isDates ? SCALE_TIME : SCALE_BAND, data, width);\n  const yScale = getYScale(SCALE_LINEAR, getMax(getStackedMax(data)), height);\n\n  const area = d3Area()\n    .curve(setLineType(lineType, lineTypeOption))\n    .x(({ name }) => xScale(name))\n    .y0(({ stackedValues }) => yScale(stackedValues[0]))\n    .y1(({ stackedValues }) => yScale(stackedValues[1]));\n\n  const handleSize = () => {\n    const offsetWidth = svgRef.current.parentElement.offsetWidth;\n    if ((svgWidth || svgHeight) && !isSizeSet) {\n      setSize({\n        ...getSize(svgWidth, svgHeight, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    } else if (offsetWidth !== svgWidth - (margin.left + margin.right)) {\n      setSize({\n        ...getSize(offsetWidth, undefined, margin, aspectRatio),\n        isSizeSet: true,\n      });\n    }\n  };\n\n  const handleResize = debounce(handleSize)();\n\n  useEffect(() => {\n    handleSize();\n    responsive && window.addEventListener('resize', handleResize);\n\n    return () => {\n      responsive && window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <SVG\n      identifier={id}\n      size={{\n        width: svgWidth || width + margin.left + margin.right,\n        height: svgHeight || height + margin.top + margin.bottom,\n      }}\n      ref={svgRef}\n    >\n      <g\n        className=\"silky-charts-container\"\n        transform={`translate(${margin.left}, ${margin.top})`}\n      >\n        {grid && (\n          <Grid\n            ref={node =>\n              d3Select(node).call(\n                drawGrid(horizontal, xScale, height, yScale, width, ticks)\n              )\n            }\n          />\n        )}\n\n        {xAxisChartLabel && (\n          <Label axis=\"x\" margin={margin} width={width} height={height}>\n            {xAxisChartLabel}\n          </Label>\n        )}\n\n        {yAxisChartLabel && (\n          <Label axis=\"y\" margin={margin} width={width} height={height}>\n            {yAxisChartLabel}\n          </Label>\n        )}\n\n        {bySeries(data).map(([series, datum], idx) => (\n          <g className={`${classify(series)}-layer`} key={idx}>\n            <Path\n              chart=\"stacked-area\"\n              fillColor={palette.themes[theme][idx]}\n              d={area(datum)}\n              strokeWidth={0}\n              onClick={onClick}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            />\n          </g>\n        ))}\n\n        <Axis\n          axis=\"x\"\n          position={{ x: 0, y: height }}\n          ref={node => {\n            d3Select(node).call(d3AxisBottom(xScale));\n            xAxisLabelRotation && rotateXLabels(id, xAxisLabelRotationValue);\n          }}\n        />\n        <Axis\n          axis=\"y\"\n          ref={node => d3Select(node).call(d3AxisLeft(yScale).ticks(ticks))}\n        />\n      </g>\n    </SVG>\n  );\n};\n\nexport default StackedArea;\n"],"names":["StackedArea","aspectRatio","ASPECT_RATIO","chartData","data","grid","height","svgHeight","undefined","horizontal","lineSeries","lineType","LINE_TYPE","lineTypeOption","margin","MARGIN","onClick","identity","onMouseEnter","onMouseLeave","responsive","theme","THEME","ticks","TICKS","width","svgWidth","xAxisChartLabel","xAxisLabelRotation","xAxisLabelRotationValue","ROTATION","yAxisChartLabel","svgRef","useRef","useState","getId","id","SIZE","isSizeSet","setSize","useMemo","setupData","isDates","appendStackedValues","buildStack","getSeries","toStackedForm","xScale","getXScale","SCALE_TIME","SCALE_BAND","yScale","getYScale","SCALE_LINEAR","getMax","getStackedMax","area","d3Area","curve","setLineType","x","name","y0","stackedValues","y1","handleSize","offsetWidth","current","parentElement","getSize","left","right","handleResize","debounce","useEffect","window","addEventListener","removeEventListener","top","bottom","node","d3Select","call","drawGrid","bySeries","map","idx","series","datum","classify","palette","themes","y","d3AxisBottom","rotateXLabels","d3AxisLeft"],"mappings":"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"}